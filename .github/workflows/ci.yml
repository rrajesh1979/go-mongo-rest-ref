name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    strategy:
      matrix:
        go: [ '1.19.x' ]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
        with:
          path: ./src/github.com/${{ github.repository }}
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - name: deps
        working-directory: ./src/github.com/${{ github.repository }}
        run:  make deps
        env:
          GOPATH: ${{ runner.workspace }}
      - name: static program analysis
        working-directory: ./src/github.com/${{ github.repository }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          mkdir -p $(go env GOPATH)/src/github.com/go-mongo-rest-ref
          ln -s $(pwd) $(go env GOPATH)/src/github.com/go-mongo-rest-ref
          make fmt-check lint vet
        env:
          GOPATH: ${{ runner.workspace }}
      - name: build
        run: make build
        working-directory: ./src/github.com/${{ github.repository }}
        env:
          GOPATH: ${{ runner.workspace }}
      - name: test
        working-directory: ./src/github.com/${{ github.repository }}
        run: make test
        env:
          GOPATH: ${{ runner.workspace }}
      - name: coverage
        working-directory: ./src/github.com/${{ github.repository }}
        run: bash <(curl -s https://codecov.io/bash)
      - name: Generate coverage report
        run: |
          go test `go list ./... | grep -v examples` -coverprofile=coverage.txt -covermode=atomic

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella
          verbose: true